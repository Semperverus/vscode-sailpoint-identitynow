{
	"name": "vscode-sailpoint-identitynow",
	"displayName": "SailPoint IdentityNow",
	"description": "Customize SailPoint IdentityNow",
	"version": "0.0.6",
	"publisher": "yannick-beot-sp",
	"icon": "resources/idn.png",
	"bugs": {
		"url": "https://github.com/yannick-beot-sp/vscode-sailpoint-identitynow/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/yannick-beot-sp/vscode-sailpoint-identitynow.git"
	},
	"homepage": "https://github.com/yannick-beot-sp/vscode-sailpoint-identitynow/",
	"engines": {
		"vscode": "^1.63.0"
	},
	"extensionKind": [
		"ui",
		"workspace"
	],
	"categories": [
		"Snippets",
		"Other"
	],
	"keywords": [
		"SailPoint",
		"IdentityNow"
	],
	"preview": true,
	"activationEvents": [
		"onView:vscode-sailpoint-identitynow.view",
		"onCommand:vscode-sailpoint-identitynow.add-tenant",
		"onCommand:vscode-sailpoint-identitynow.remove-tenant",
		"onCommand:vscode-sailpoint-identitynow.export-config.view",
		"onCommand:vscode-sailpoint-identitynow.export-config.palette",
		"onCommand:vscode-sailpoint-identitynow.refresh",
		"onCommand:vscode-sailpoint-identitynow.open-resource",
		"onCommand:vscode-sailpoint-identitynow.remove-resource",
		"onCommand:vscode-sailpoint-identitynow.aggregate-source",
		"onCommand:vscode-sailpoint-identitynow.aggregate-source-disable-optimization",
		"onCommand:vscode-sailpoint-identitynow.reset-source",
		"onCommand:vscode-sailpoint-identitynow.new-transform",
		"onCommand:vscode-sailpoint-identitynow.new-provisioning-policy",
		"onCommand:vscode-sailpoint-identitynow.new-schema",
		"onCommand:vscode-sailpoint-identitynow.workflow.enable",
		"onCommand:vscode-sailpoint-identitynow.workflow.disable",
		"onCommand:vscode-sailpoint-identitynow.workflow.view-execution-history",
		"onCommand:vscode-sailpoint-identitynow.workflow.test",
		"onView:vscode-sailpoint-identitynow.workflow.test-view",
		"onFileSystem:idn"
	],
	"license": "MIT",
	"main": "./out/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "sailpoint",
					"title": "SailPoint IdentityNow",
					"icon": "resources/idn.svg"
				}
			]
		},
		"views": {
			"sailpoint": [
				{
					"id": "vscode-sailpoint-identitynow.view",
					"name": "IdentityNow Tenants",
					"icon": "resources/idn.svg"
				},
				{
					"id": "vscode-sailpoint-identitynow.workflow.test-view",
					"type": "webview",
					"name": "Workflow tester"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "vscode-sailpoint-identitynow.view",
				"contents": "No tenant.\n[Add Tenant](command:vscode-sailpoint-identitynow.add-tenant)"
			}
		],
		"commands": [
			{
				"command": "vscode-sailpoint-identitynow.add-tenant",
				"title": "IdentityNow: Add tenant...",
				"icon": "$(add)"
			},
			{
				"command": "vscode-sailpoint-identitynow.remove-tenant",
				"title": "Remove tenant"
			},
			{
				"command": "vscode-sailpoint-identitynow.export-config.view",
				"title": "Export config...",
				"icon": "$(export)"
			},
			{
				"command": "vscode-sailpoint-identitynow.export-config.palette",
				"title": "IdentityNow: Export config...",
				"icon": "$(export)"
			},
			{
				"command": "vscode-sailpoint-identitynow.refresh",
				"title": "IdentityNow: Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-sailpoint-identitynow.open-resource",
				"title": "Open"
			},
			{
				"command": "vscode-sailpoint-identitynow.remove-resource",
				"title": "Delete",
				"icon": "$(trash)"
			},
			{
				"command": "vscode-sailpoint-identitynow.aggregate-source",
				"title": "Aggregate source"
			},
			{
				"command": "vscode-sailpoint-identitynow.aggregate-source-disable-optimization",
				"title": "Aggregate source without optimization"
			},
			{
				"command": "vscode-sailpoint-identitynow.reset-source",
				"title": "Reset source"
			},
			{
				"command": "vscode-sailpoint-identitynow.new-transform",
				"title": "New transform",
				"icon": "$(add)"
			},
			{
				"command": "vscode-sailpoint-identitynow.new-provisioning-policy",
				"title": "New provisioning policy",
				"icon": "$(add)"
			},
			{
				"command": "vscode-sailpoint-identitynow.new-schema",
				"title": "New Schema",
				"icon": "$(add)"
			},
			{
				"command": "vscode-sailpoint-identitynow.workflow.enable",
				"title": "Enable",
				"icon": "$(debug-start)"
			},
			{
				"command": "vscode-sailpoint-identitynow.workflow.test",
				"title": "Test workflow...",
				"icon": "$(test-view-icon)"
			},
			{
				"command": "vscode-sailpoint-identitynow.workflow.disable",
				"title": "Disable",
				"icon": "$(debug-stop)"
			},
			{
				"command": "vscode-sailpoint-identitynow.workflow.view-execution-history",
				"title": "View execution history..."
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "vscode-sailpoint-identitynow.export-config.view",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.aggregate-source",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.open-resource",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.remove-resource",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.aggregate-source-disable-optimization",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.reset-source",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.new-transform",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.new-provisioning-policy",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.new-schema",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.enable",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.disable",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.test",
					"when": "never"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.view-execution-history",
					"when": "never"
				}
			],
			"view/title": [
				{
					"command": "vscode-sailpoint-identitynow.add-tenant",
					"when": "view == vscode-sailpoint-identitynow.view",
					"group": "navigation"
				},
				{
					"command": "vscode-sailpoint-identitynow.refresh",
					"when": "view == vscode-sailpoint-identitynow.view",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "vscode-sailpoint-identitynow.remove-tenant",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == tenant"
				},
				{
					"command": "vscode-sailpoint-identitynow.export-config.view",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == tenant"
				},
				{
					"command": "vscode-sailpoint-identitynow.refresh",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == sources",
					"group": "inline"
				},
				{
					"command": "vscode-sailpoint-identitynow.aggregate-source",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == source"
				},
				{
					"command": "vscode-sailpoint-identitynow.aggregate-source-disable-optimization",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == source"
				},
				{
					"command": "vscode-sailpoint-identitynow.reset-source",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == source"
				},
				{
					"command": "vscode-sailpoint-identitynow.open-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == source"
				},
				{
					"command": "vscode-sailpoint-identitynow.new-transform",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == transforms",
					"group": "inline@1"
				},
				{
					"command": "vscode-sailpoint-identitynow.refresh",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == transforms",
					"group": "inline@2"
				},
				{
					"command": "vscode-sailpoint-identitynow.open-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == transform"
				},
				{
					"command": "vscode-sailpoint-identitynow.remove-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == transform"
				},
				{
					"command": "vscode-sailpoint-identitynow.new-provisioning-policy",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == provisioning-policies",
					"group": "inline"
				},
				{
					"command": "vscode-sailpoint-identitynow.remove-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == provisioning-policy"
				},
				{
					"command": "vscode-sailpoint-identitynow.new-schema",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == schemas",
					"group": "inline"
				},
				{
					"command": "vscode-sailpoint-identitynow.remove-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == schema"
				},
				{
					"command": "vscode-sailpoint-identitynow.open-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem =~ /workflow$/i"
				},
				{
					"command": "vscode-sailpoint-identitynow.remove-resource",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem =~ /workflow$/i"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.enable",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == disabledWorkflow"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.disable",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem == enabledWorkflow"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.view-execution-history",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem =~ /workflow$/i"
				},
				{
					"command": "vscode-sailpoint-identitynow.workflow.test",
					"when": "view == vscode-sailpoint-identitynow.view && viewItem =~ /XXX$/i"
				}
			]
		},
		"snippets": [
			{
				"language": "json",
				"path": "./snippets/transforms.json"
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "idn://**/schemas/**/*",
				"url": "./schemas/schemas.schemas.json"
			},
			{
				"fileMatch": "idn://**/provisioning-policies/**/*",
				"url": "./schemas/provisioning-policies.schemas.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"clean": "rimraf out"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/isomorphic-fetch": "^0.0.35",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.63.0",
		"@typescript-eslint/eslint-plugin": "^5.9.1",
		"@typescript-eslint/parser": "^5.9.1",
		"@vscode/test-electron": "^2.0.3",
		"esbuild": "^0.14.18",
		"eslint": "^8.6.0",
		"glob": "^7.2.0",
		"mocha": "^9.1.3",
		"rimraf": "^3.0.2",
		"typescript": "^4.5.4"
	},
	"dependencies": {
		"@vscode/webview-ui-toolkit": "^1.0.0",
		"client-oauth2": "^4.3.3",
		"isomorphic-fetch": "^3.0.0",
		"isomorphic-form-data": "^2.0.0"
	}
}
